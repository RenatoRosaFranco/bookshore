# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: bookshore_development

test:
  <<: *default
  database: bookshore_test

production:
  primary: &primary_production
    <<: *default
    database: <%= ENV.fetch("BOOKSHORE_DATABASE_NAME") %>
    username: <%= ENV.fetch("BOOKSHORE_DATABASE_USER") %>
    password: <%= ENV.fetch("BOOKSHORE_DATABASE_PASSWORD") %>
    host: <%= ENV.fetch("BOOKSHORE_DATABASE_HOST") %>
    port: <%= ENV.fetch("BOOKSHORE_DATABASE_PORT", 5432) %>

  cache:
    <<: *primary_production
    database: <%= ENV.fetch("BOOKSHORE_DATABASE_NAME_CACHE", "#{ENV["BOOKSHORE_DATABASE_NAME"]}_cache") %>
    migrations_paths: db/cache_migrate

  queue:
    <<: *primary_production
    database: <%= ENV.fetch("BOOKSHORE_DATABASE_NAME_QUEUE", "#{ENV["BOOKSHORE_DATABASE_NAME"]}_queue") %>
    migrations_paths: db/queue_migrate

  cable:
    <<: *primary_production
    database: <%= ENV.fetch("BOOKSHORE_DATABASE_NAME_CABLE", "#{ENV["BOOKSHORE_DATABASE_NAME"]}_cable") %>
    migrations_paths: db/cable_migrate
